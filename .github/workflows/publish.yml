name: Publish to NPM

on:
  push:
    tags:
      - "v*" # Triggers on version tags like v1.0.0

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: |
          npm run type-check
          npx tsc --noEmit --strict

      - name: Build library
        run: npm run build

      - name: Generate documentation
        run: npm run docs

      - name: Validate package before publishing
        run: npm pack --dry-run

      - name: Update package version
        run: |
          # Extract version from GitHub release tag (remove 'v' prefix if present)
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}
          echo "Setting package version to: $VERSION"
          npm version $VERSION --no-git-tag-version

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub deployment
        uses: actions/github-script@v7
        with:
          script: |
            const tagName = context.ref.replace('refs/tags/', '');
            const version = tagName.replace('v', '');

            console.log(`Published version ${tagName} to NPM`);

            // Create a commit comment instead of release comment
            const commit = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: tagName
            });

            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: commit.data.sha,
              body: `ðŸš€ Successfully published to NPM!\n\nTag: \`${tagName}\`\nInstall with: \`npm install supabase-service-manager@${version}\``
            });

  deploy-docs:
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate documentation
        run: npm run docs

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          cname: # Add your custom domain here if you have one
